body {
    width: 800px;
    margin: 1% auto;
    background: linear-gradient(to left, #4d734d, #101010);
}
/* контейнер просто содержит узлы.
 Узел сам будет отвечать за свой отступ */
.Container {
        padding: 0;
        margin: 0;
}
 
.Container li {
        list-style-type: none; /* убрать кружочки/точечки */
}

/* узел отодвинут от левой стенки контейнера на 18px
    благодаря этим отступам вложенные узлы формируют иерархию
 */
.Node {
    margin-left: 18px;
    zoom: 1; /* спецсвойство против багов IE6,7. Ставит hasLayout */
}
 
/* Корневой узел от родительского контейнера не отодвинут.
   Ему же не надо демонстрировать отступом, чей он сын.
   Это правило идет после .Node, поэтому имеет более высокий приоритет
   Так что class="Node IsRoot" дает margin-left:0
*/
.IsRoot {
    margin-left: 0;
}

/* иконка скрытого/раскрытого поддерева или листа
    сами иконки идут дальше, здесь общие свойства
 */
.Expand {
    width: 18px;
    height: 18px;
    /* принцип двухколоночной верстки. */
    /* float:left и width дива Expand + margin-left дива Content */
    float: left;
    margin:2px 10px;
}
 
/* содержание (заголовок) узла */
 .Content {
    /* чтобы не налезать на Expand */
    margin-left:18px;
    /* высота заголовка - как минимум равна Expand
        Т.е правая колонка всегда выше или равна левой.
        Иначе нижний float будет пытаться разместиться на получившейся ступеньке
    */   
    min-height: 18px;
    margin: 3px auto;
    border: 2px solid #3f8670; 
    border-radius:15px;
}
 
 /* все правила после * html выполняет только IE6 */
* html .Content {
    height: 18px; /* аналог min-height для IE6 */
}

.Content {
    width: 200px;    
}

#c-144 {
    min-height: 18px;
    width: 50px;
    padding: 3px;
    text-align: center;
    margin: 3px auto;
    border: 2px solid #3f8670; 
    border-radius:15px;
}

/* открытое поддерево */
.ExpandOpen .Expand { 
    background-image: url(img/minus.png); 
}
 
/* закрытое поддерево */
.ExpandClosed .Expand {
    background-image: url(img/plus.png);
}
 
/* лист */
.ExpandLeaf .Expand {
    background-image: url(img/leaf.png);
}

.Node {
    margin-left: 25px;
    zoom: 1;
    /* линия слева образуется повторяющимся фоновым рисунком */
    background-image : url(img/i.png);
    background-position : top 3px left 10px;
    background-repeat : repeat-y;
}

/* это правило - ниже .Node, поэтому имеет больший приоритет */
.IsLast {
    /* добавить соединительную черточку наверх */
    background-image: url(img/i_half.gif);
    background-repeat : no-repeat;
}

.ExpandOpen .Container {
    display: block;
}
 
.ExpandClosed .Container {
    display: none;
}

.ExpandOpen .Expand, .ExpandClosed .Expand {
    cursor: pointer; /* иконки скрытия-раскрытия */
}
 
.ExpandLeaf .Expand {
    cursor: auto; /* листовой узел */
}

.ExpandLoading   {
    width: 18px;
    height: 18px;
    float: left;
    background-image: url(img/expand_loading.gif);
}

@font-face {
    font-family: "Jokerman LET Plain:1.0";
    src: url(font/Jokerman-1.ttf);
}

header {
    border: 4px solid darkolivegreen;
    border-radius:20px;
    background: linear-gradient(to top, #c5e5ec, #66ffa4);
    font-family: "Jokerman LET Plain:1.0";
    font-size: 25px;
    color: #05480b;
    text-align: center;
    margin: 2px;
}

article {
    float: right;
    width: 66%;
    height: 600px;
    padding: 2px;
    text-align: center;
    border: 4px solid darkolivegreen;
    border-radius:7px;
    margin: 2px;
    background-color: #6ffcab;
}

aside {
    float:left;
    width: 30%;
    height: 600px;
    border: 4px solid darkolivegreen;
    border-radius:7px;
    margin: 2px;
    padding: 2px;
    background: linear-gradient(to left, #c5e5ec, #66ffa4);
    overflow: auto;

}

#Root {
    padding: 2px;
    margin-left: 0px;
    position: relative;
    left: -25px;
}

#center {
    width: 100%;
    height: 451px;
    overflow: auto; 
}

p {
    height: 67px;
    overflow: auto; 
}

h4 {
    color: #f58a00;
    text-align: right; 
    margin: 0px;
}

#dmy {
    text-align: left;
    width: 32%;
    float: left;
    margin: 0px;
}

span {
    position: relative;
    left: 17%;
}